<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <title>Test de Preferencias - MotoMatch</title>
  <link rel="stylesheet" href="{{ url_for('static', filename='css/styles.css') }}">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/matter-js/0.17.1/matter.min.js"></script>
  <script src="{{ url_for('static', filename='js/test.js') }}" defer></script>
  <style>    
    .circle-canvas {
      min-height: 400px;
      height: 50vh;
      border: 2px solid rgba(249, 115, 22, 0.5);
      border-radius: 10px;
      margin-bottom: 15px;
      position: relative;
      overflow: hidden;
      width: 100%;
      background-color: rgba(0, 0, 0, 0.8);
      box-shadow: 0 0 10px rgba(249, 115, 22, 0.3);
    }
    
    .pregunta {
      display: none;
      background-color: rgba(0, 0, 0, 0.7);
      border-radius: 10px;
      padding: 25px;
      margin-bottom: 20px;
      border: 1px solid rgba(249, 115, 22, 0.3);
      animation: fadeIn 0.5s ease;
      opacity: 0;
      transition: opacity 0.3s ease;
    }
    
    .pregunta.active {
      display: block;
      opacity: 1;
    }
    
    .progress-container {      
      width: 100%;
      height: 8px;
      background-color: rgba(255, 255, 255, 0.1);
      border-radius: 4px;
      margin-bottom: 20px;
      overflow: hidden;
    }
    
    .progress-bar {
      height: 100%;
      width: 0%;
      background-color: #f97316;
      transition: width 0.3s ease;
    }
    
    /* Animación para fadeIn */
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(-10px); }
      to { opacity: 1; transform: translateY(0); }
    }
    
    .options-wrapper {
      width: 100%;
      height: 100%;
      padding: 0; /* Eliminamos el padding para que el canvas ocupe todo el espacio */
    }
    
    #physics-container {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -1;
      pointer-events: none;
    }
    
    /* Estilos para asegurar que los canvas sean visibles y reciban eventos */
    #estilos-canvas, #marcas-canvas {
      width: 100% !important;
      height: 100% !important;
      pointer-events: auto;
      touch-action: none; /* Mejora interacción en dispositivos táctiles */
    }
    
    /* Estilos para asegurar que los canvas reciban los eventos del mouse */
    canvas {
      position: relative;
      z-index: 1;
    }
    
    /* Estilos para los círculos seleccionados */
    .circulo-seleccionado {
      filter: brightness(1.5);
      box-shadow: 0 0 15px #f97316;
    }
    
    /* Mejorar visibilidad de textos */
    h2 {
      color: #f97316;
      text-shadow: 0 0 2px rgba(0,0,0,0.5);
    }
    
    /* Estilo para ayudar a los usuarios a entender la interacción */
    .interaction-help {
      font-size: 14px;      
      font-style: italic;
      color: #f97316;
      margin-bottom: 10px;
    }

    /* Modal de finalización */
    .completion-modal {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.8);
      display: none;
      justify-content: center;
      align-items: center;
      z-index: 1000;
    }
    
    .modal-content {
      background-color: rgba(0, 0, 0, 0.9);
      border: 2px solid #f97316;
      border-radius: 10px;
      padding: 30px;
      max-width: 500px;
      text-align: center;
      box-shadow: 0 0 20px rgba(249, 115, 22, 0.5);
      animation: fadeIn 0.5s;
    }
    
    /* Estilos para los botones de navegación */
    .nav-buttons {
      display: flex;
      justify-content: space-between;
      margin-top: 20px;
    }
    
    .nav-button {
      background-color: #f97316;
      color: white;
      border: none;
      border-radius: 5px;
      padding: 10px 20px;
      font-size: 16px;
      cursor: pointer;
      transition: all 0.3s ease;
    }
    
    .nav-button:hover {
      background-color: #ea580c;
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }
    
    .nav-button:disabled {
      background-color: #666;
      cursor: not-allowed;
      transform: none;
      box-shadow: none;
    }
    
    /* Efecto de confeti para la finalización */
    @keyframes confettiDrop {
      0% { transform: translateY(-100px) rotate(0deg); opacity: 1; }
      100% { transform: translateY(100vh) rotate(360deg); opacity: 0; }
    }
    
    .confetti {
      position: absolute;
      width: 10px;
      height: 10px;
      background-color: #f97316;
      border-radius: 50%;
      animation: confettiDrop 4s ease-in-out forwards;
      z-index: 1001;
    }
    
    /* Mejora de selectores */
    select {
      width: 100%;
      padding: 12px;
      border-radius: 5px;
      border: 1px solid #f97316;
      background-color: rgba(0, 0, 0, 0.7);
      color: white;
      margin-bottom: 15px;
      transition: all 0.3s ease;
      cursor: pointer;
    }
    
    select:focus {
      outline: none;
      border-color: #ea580c;
      box-shadow: 0 0 8px rgba(249, 115, 22, 0.5);
    }
    
    option {
      background-color: #111;
      color: white;
    }
    
    .help-text {
      font-size: 14px;
      color: #aaa;
      font-style: italic;
      margin-top: 5px;
    }
  </style>
</head>
<body>
  <a href="{{ url_for('main.dashboard') }}" class="back-dashboard-btn">
    <i class="fas fa-arrow-left"></i> Regresar al Dashboard
  </a>
  
  <div id="physics-container"></div>
  <div id="contenedorPrincipalTest" class="main-container">
    <div class="test-container">
      <h1 class="tituloFriends">Test de Preferencias</h1>
      
      <div class="progress-container">
        <div class="progress-bar" id="progress-bar"></div>
      </div>
      
      <!-- Pregunta 1: Estilo de moto (Sin cambios) -->
      <section class="pregunta active" id="pregunta-1" data-type="circles" data-key="estilos">
        <h2>1. ¿Qué estilo(s) de moto te gustan más?</h2>
        <p>Haz clic en las burbujas para seleccionar (1 clic: me gusta, 4 clics: me encanta)</p>
        <p class="interaction-help">Puedes hacer clic en cualquier parte para que las burbujas se muevan</p>
        <div class="options-wrapper">
          <div class="circle-canvas" id="estilos-canvas"></div>
        </div>
      </section>

      <!-- Pregunta 2: Marca favorita (Sin cambios) -->
      <section class="pregunta" id="pregunta-2" data-type="circles" data-key="marcas">
        <h2>2. ¿Qué marca(s) prefieres?</h2>
        <p>Haz clic en las burbujas para seleccionar (1 clic: me gusta, 4 clics: me encanta)</p>
        <p class="interaction-help">Puedes hacer clic en cualquier parte para que las burbujas se muevan</p>
        <div class="options-wrapper">
          <div class="circle-canvas" id="marcas-canvas"></div>
        </div>
      </section>
      
      <!-- Pregunta 3: Nivel de experiencia (determina peso y siguientes preguntas) -->
      <section class="pregunta" id="pregunta-3" data-type="select" data-key="experiencia" data-branch="true">
        <h2>3. ¿Cuál es tu nivel de experiencia?</h2>
        <select name="experiencia" id="experiencia">
          <option value="inexperto">Inexperto</option>
          <option value="experto">Muy Experto</option>
        </select>
        <p class="help-text">Esta respuesta determinará el tipo de preguntas que se te mostrarán a continuación</p>
      </section>

      <!-- RAMA INEXPERTO -->
      <!-- Pregunta 4-I: Uso (determina potencia) -->
      <section class="pregunta rama-inexperto" id="pregunta-4-inexperto" data-type="select" data-key="uso">
        <h2>4. ¿Qué uso le darás a la moto?</h2>
        <select name="uso" id="uso">
          <option value="ciudad">Uso en ciudad</option>
          <option value="paseo">Paseos ocasionales</option>
          <option value="viajes">Viajes largos</option>
          <option value="mixto">Uso mixto</option>
          <option value="no_se">No estoy seguro</option>
        </select>
      </section>

      <!-- Pregunta 5-I: Acompañantes (determina torque) -->
      <section class="pregunta rama-inexperto" id="pregunta-5-inexperto" data-type="select" data-key="acompanantes">
        <h2>5. ¿Viajarás con acompañantes, carga o solo?</h2>
        <select name="acompanantes" id="acompanantes">
          <option value="solo">Siempre solo</option>
          <option value="ocasional">Ocasionalmente con acompañante</option>
          <option value="frecuente">Frecuentemente con acompañante</option>
          <option value="carga">Con carga</option>
          <option value="no_se">No estoy seguro</option>
        </select>
      </section>

      <!-- Pregunta 6-I: Consumo vs Potencia (determina cilindrada) -->
      <section class="pregunta rama-inexperto" id="pregunta-6-inexperto" data-type="select" data-key="consumo">
        <h2>6. ¿Prefieres ahorrar gasolina o tener más potencia?</h2>
        <select name="consumo" id="consumo">
          <option value="ahorro">Priorizo el ahorro de combustible</option>
          <option value="equilibrio">Equilibrio entre consumo y potencia</option>
          <option value="potencia">Priorizo la potencia</option>
          <option value="no_se">No estoy seguro</option>
        </select>
      </section>

      <!-- Pregunta 7-I: Precio (determina precio) -->
      <section class="pregunta rama-inexperto" id="pregunta-7-inexperto" data-type="select" data-key="precio">
        <h2>7. ¿Tienes algún rango de precios?</h2>
        <select name="precio" id="precio-inexperto">
          <option value="bajo">Menos de Q30,000</option>
          <option value="medio_bajo">Q30,000 - Q50,000</option>
          <option value="medio">Q50,000 - Q80,000</option>
          <option value="alto">Más de Q80,000</option>
          <option value="no_se">No tengo un presupuesto definido</option>
        </select>
      </section>

      <!-- RAMA EXPERTO -->
      <!-- Pregunta 4-E: Potencia -->
      <section class="pregunta rama-experto" id="pregunta-4-experto" data-type="select" data-key="potencia">
        <h2>4. ¿Qué rango de potencia buscas?</h2>
        <select name="potencia" id="potencia">
          <option value="baja">Baja potencia (menos de 35HP)</option>
          <option value="media_baja">Potencia media-baja (35-60HP)</option>
          <option value="media">Potencia media (60-90HP)</option>
          <option value="alta">Potencia alta (90-120HP)</option>
          <option value="muy_alta">Potencia muy alta (más de 120HP)</option>
          <option value="no_se">No tengo preferencia</option>
        </select>
      </section>

      <!-- Pregunta 5-E: Torque -->
      <section class="pregunta rama-experto" id="pregunta-5-experto" data-type="select" data-key="torque">
        <h2>5. ¿Qué rango de torque prefieres?</h2>
        <select name="torque" id="torque">
          <option value="bajo">Torque bajo (menos de 30Nm)</option>
          <option value="medio_bajo">Torque medio-bajo (30-50Nm)</option>
          <option value="medio">Torque medio (50-80Nm)</option>
          <option value="alto">Torque alto (80-120Nm)</option>
          <option value="muy_alto">Torque muy alto (más de 120Nm)</option>
          <option value="no_se">No tengo preferencia</option>
        </select>
      </section>

      <!-- Pregunta 6-E: Cilindrada -->
      <section class="pregunta rama-experto" id="pregunta-6-experto" data-type="select" data-key="cilindrada">
        <h2>6. ¿Qué cilindrada buscas?</h2>
        <select name="cilindrada" id="cilindrada">
          <option value="pequeña">Pequeña (menos de 250cc)</option>
          <option value="media_baja">Media-baja (250-400cc)</option>
          <option value="media">Media (400-650cc)</option>
          <option value="alta">Alta (650-900cc)</option>
          <option value="muy_alta">Muy alta (más de 900cc)</option>
          <option value="no_se">No tengo preferencia</option>
        </select>
      </section>

      <!-- Pregunta 7-E: Uso (igual que para inexpertos) -->
      <section class="pregunta rama-experto" id="pregunta-7-experto" data-type="select" data-key="uso_experto">
        <h2>7. ¿Qué uso le darás a la moto?</h2>
        <select name="uso_experto" id="uso_experto">
          <option value="ciudad">Uso en ciudad</option>
          <option value="paseo">Paseos ocasionales</option>
          <option value="viajes">Viajes largos</option>
          <option value="mixto">Uso mixto</option>
          <option value="no_se">No estoy seguro</option>
        </select>
      </section>

      <!-- Pregunta 8-E: Acompañantes (igual que para inexpertos) -->
      <section class="pregunta rama-experto" id="pregunta-8-experto" data-type="select" data-key="acompanantes_experto">
        <h2>8. ¿Viajarás con acompañantes, carga o solo?</h2>
        <select name="acompanantes_experto" id="acompanantes_experto">
          <option value="solo">Siempre solo</option>
          <option value="ocasional">Ocasionalmente con acompañante</option>
          <option value="frecuente">Frecuentemente con acompañante</option>
          <option value="carga">Con carga</option>
          <option value="no_se">No estoy seguro</option>
        </select>
      </section>

      <!-- Pregunta 9-E: Precio (determina precio) -->
      <section class="pregunta rama-experto" id="pregunta-9-experto" data-type="select" data-key="precio_experto">
        <h2>9. ¿Tienes algún rango de precios?</h2>
        <select name="precio_experto" id="precio-experto">
          <option value="bajo">Menos de Q30,000</option>
          <option value="medio_bajo">Q30,000 - Q50,000</option>
          <option value="medio">Q50,000 - Q80,000</option>
          <option value="alto">Q80,000 - Q120,000</option>
          <option value="muy_alto">Más de Q120,000</option>
          <option value="no_se">No tengo un presupuesto definido</option>
        </select>
      </section>

      <div class="nav-buttons">
        <button id="prev-btn" class="nav-button" disabled><i class="fas fa-arrow-left"></i> Anterior</button>
        <button id="next-btn" class="nav-button">Siguiente <i class="fas fa-arrow-right"></i></button>
      </div>
    </div>
  </div>

  <!-- Modal de finalización -->
  <div class="completion-modal" id="completion-modal">
    <div class="modal-content">
      <h2>¡Test completado con éxito!</h2>
      <p>Gracias por completar el test de preferencias. Con esta información podremos recomendarte las mejores motos que se ajusten a tus gustos.</p>
      <button id="finish-btn" class="nav-button" onclick="finalizarTest()">Ver mis recomendaciones</button>
    </div>
  </div>

  <footer>
    <p>&copy; 2025 MotoMatch. Todos los derechos reservados. | <a href="/" class="link">Inicio</a></p>
  </footer>
  
  <script>
    // Función para finalizar el test y enviar datos
    function finalizarTest() {
      // Recopilar todas las respuestas
      const datosTest = window.respuestas || {};
      console.log('Enviando datos del test:', datosTest);
      
      // Crear un formulario oculto para enviar los datos
      const form = document.createElement('form');
      form.method = 'POST';
      form.action = '/recomendaciones';
      
      // Añadir los datos como campos ocultos
      for (const key in datosTest) {
        if (typeof datosTest[key] === 'object') {
          // Para objetos como estilos y marcas
          const input = document.createElement('input');
          input.type = 'hidden';
          input.name = key;
          input.value = JSON.stringify(datosTest[key]);
          form.appendChild(input);
        } else {
          // Para valores simples
          const input = document.createElement('input');
          input.type = 'hidden';
          input.name = key;
          input.value = datosTest[key];
          form.appendChild(input);
        }
      }
      
      // Añadir el formulario al documento y enviarlo
      document.body.appendChild(form);
      form.submit();
    }
  </script>
  
  <script>
    // Script para manejar la ramificación basada en el nivel de experiencia
    document.addEventListener('DOMContentLoaded', function() {
      const experienciaSelect = document.getElementById('experiencia');
      const nextBtn = document.getElementById('next-btn');
      const prevBtn = document.getElementById('prev-btn');
      const progressBar = document.getElementById('progress-bar');
      
      // Asegurar que las variables de Matter.js sean accesibles desde este script
      window.estilos = window.estilos || ["cross", "custom", "eléctrica", "enduro", "infantil", "naked", "quad-atv", "scooter", "sport", "supermotard", "trail", "trial", "turismo"];
      window.marcas = window.marcas || ["AJP", "Adiva", "Aeon", "Alpina", "Aprilia", "Artemisa", "Astra", "Bajaj", "Benda", "Beta", "BH", "Bimoto", "BMW", "Brixton", "Bullit", "CFMoto", "Cleveland CycleWerks", "Ducati", "Energica", "GasGas", "Gilera", "Honda", "Husqvarna", "Indian", "Jawa", "Kawasaki", "KTM", "Kymco", "Lambretta", "Lifan", "Macbor", "Mash", "MCI", "Moto Morini", "Moto Guzzi", "Motron", "MV Agusta", "Neoway", "Norton", "Peugeot", "Piaggio", "Polaris", "Qooder", "Rieju", "Royal Enfield", "Sherco", "Suzuki", "SYM", "Tesla", "Triumph", "UM Motorcycles", "Urbet", "Vectrix", "Vespa", "Victory", "Voge", "Volta", "Vässla", "Wottan", "Xero", "Yadea", "Yamaha", "Zero Motorcycles", "Zitmuv", "Zontes"];
      
      // Asegurarse que solo la primera pregunta esté visible
      document.querySelectorAll('.pregunta').forEach(element => {
        if (!element.classList.contains('active')) {
          element.style.display = 'none';
        } else {
          element.style.display = 'block';
        }
      });
      
      // Inicializar respuestas
      window.respuestas = window.respuestas || {
        estilos: {},
        marcas: {},
        experiencia: "",
        uso: "",
        acompanantes: "",
        consumo: "",
        precio: "",
        potencia: "",
        torque: "",
        cilindrada: "",
        uso_experto: "",
        acompanantes_experto: "",
        precio_experto: ""
      };
      
      // Actualizar barra de progreso
      function updateProgressBar() {
        const currentQuestion = document.querySelector('.pregunta.active');
        let totalQuestions, currentQuestionNum;
        
        if (currentQuestion) {
          if (currentQuestion.classList.contains('rama-inexperto')) {
            totalQuestions = 7; // Total preguntas para inexpertos
            currentQuestionNum = parseInt(currentQuestion.id.split('-')[1]);
          } else if (currentQuestion.classList.contains('rama-experto')) {
            totalQuestions = 9; // Total preguntas para expertos
            currentQuestionNum = parseInt(currentQuestion.id.split('-')[1]);
          } else {
            // Preguntas iniciales (1-3)
            totalQuestions = 9; // Asumimos el total más largo (expertos)
            currentQuestionNum = parseInt(currentQuestion.id.split('-')[1]);          
          }
          const percentage = (currentQuestionNum / totalQuestions) * 100;
          progressBar.style.width = `${percentage}%`;
          console.log(`Progreso: ${currentQuestionNum}/${totalQuestions} = ${percentage}%`);
        }
      }
      
      // Inicializar la barra de progreso
      updateProgressBar();
      
      // Mostrar modal de finalización
      function showCompletionModal() {
        // Capturar los valores de todas las selecciones
        document.querySelectorAll('select').forEach(select => {
          if (select.id && select.value) {
            // Almacenar en el objeto respuestas que usa test.js para enviar los datos
            window.respuestas = window.respuestas || {};
            window.respuestas[select.id] = select.value;
            console.log(`Guardando respuesta: ${select.id} = ${select.value}`);
          }
        });
        
        // Mostrar el modal
        const modal = document.getElementById('completion-modal');
        modal.style.display = 'flex';
        
        // Crear efecto confetti
        createConfetti();
      }
      
      // Override del comportamiento del botón siguiente
      nextBtn.onclick = function(e) {
        const currentQuestion = document.querySelector('.pregunta.active');
        
        // Si estamos en la pregunta de experiencia, manejar la ramificación
        if (currentQuestion && currentQuestion.id === 'pregunta-3') {
          const experiencia = experienciaSelect.value;
          
          // Guardar la experiencia en las respuestas
          window.respuestas.experiencia = experiencia;
          
          // Ocultar todas las preguntas
          document.querySelectorAll('.pregunta').forEach(question => {
            question.classList.remove('active');
            question.style.display = 'none';
          });
          
          // Mostrar la siguiente pregunta según la rama
          if (experiencia === 'experto') {
            document.getElementById('pregunta-4-experto').style.display = 'block';
            document.getElementById('pregunta-4-experto').classList.add('active');
          } else {
            document.getElementById('pregunta-4-inexperto').style.display = 'block';
            document.getElementById('pregunta-4-inexperto').classList.add('active');
          }
          
          // Actualizar botones y barra de progreso
          prevBtn.disabled = false;
          updateProgressBar();
          
          return; // Evitar que se ejecute el comportamiento original
        }       
        
        // Si estamos en una rama específica, manejar la navegación
        if (currentQuestion && currentQuestion.classList.contains('rama-inexperto')) {
          // Guardar la respuesta actual
          const select = currentQuestion.querySelector('select');
          if (select && select.id) {
            window.respuestas[select.id] = select.value;
          }
          
          const questionNum = parseInt(currentQuestion.id.split('-')[1]);
          
          // Si no es la última pregunta de inexpertos
          if (questionNum < 7) {
            // Ocultar todas las preguntas
            document.querySelectorAll('.pregunta').forEach(question => {
              question.classList.remove('active');
              question.style.display = 'none';
            });
            
            // Mostrar solo la siguiente pregunta
            const nextQuestion = document.getElementById(`pregunta-${questionNum+1}-inexperto`);
            nextQuestion.style.display = 'block';
            nextQuestion.classList.add('active');
            updateProgressBar();
            return;
          } 
          // Si es la última pregunta de inexpertos
          else {
            showCompletionModal();
            return;
          }
        }
        
        // Manejar rama de expertos
        if (currentQuestion && currentQuestion.classList.contains('rama-experto')) {
          // Guardar la respuesta actual
          const select = currentQuestion.querySelector('select');
          if (select && select.id) {
            window.respuestas[select.id] = select.value;
          }
          
          const questionNum = parseInt(currentQuestion.id.split('-')[1]);
          
          // Si no es la última pregunta de expertos
          if (questionNum < 9) {
            // Ocultar todas las preguntas
            document.querySelectorAll('.pregunta').forEach(question => {
              question.classList.remove('active');
              question.style.display = 'none';
            });
            
            // Mostrar solo la siguiente pregunta
            const nextQuestion = document.getElementById(`pregunta-${questionNum+1}-experto`);
            nextQuestion.style.display = 'block';
            nextQuestion.classList.add('active');
            updateProgressBar();
            return;
          } 
          // Si es la última pregunta de expertos
          else {
            showCompletionModal();
            return;
          }
        }
        
        // Comportamiento normal para las primeras preguntas
        if (currentQuestion && (currentQuestion.id === 'pregunta-1' || currentQuestion.id === 'pregunta-2')) {
          const questionNum = parseInt(currentQuestion.id.split('-')[1]);
          if (questionNum < 3) {
            // Ocultar todas las preguntas
            document.querySelectorAll('.pregunta').forEach(question => {
              question.classList.remove('active');
              question.style.display = 'none';
            });
            
            // Mostrar solo la siguiente pregunta
            const nextQuestion = document.getElementById(`pregunta-${questionNum+1}`);
            nextQuestion.style.display = 'block';
            nextQuestion.classList.add('active');
            prevBtn.disabled = false;
            updateProgressBar();
            
            // Si pasamos de pregunta 1 a pregunta 2, inicializar los círculos de marcas
            if (questionNum === 1) {
              // Llamamos a las funciones de test.js para inicializar la segunda pregunta
              setTimeout(() => {
                if (typeof crearCirculos === 'function') {
                  crearCirculos('marcas', window.marcas || []);
                  setupMouseInteraction('marcas');
                  updateWorldBoundaries();
                  console.log('Inicializando pregunta de marcas con círculos');
                } else {
                  console.error('Error: función crearCirculos no disponible');
                }
              }, 200);
            }
          }
        }
      };
      
      // Botón anterior
      prevBtn.addEventListener('click', function() {
        const currentQuestion = document.querySelector('.pregunta.active');
        
        if (currentQuestion.classList.contains('rama-inexperto')) {
          const questionNum = parseInt(currentQuestion.id.split('-')[1]);
          
          // Ocultar todas las preguntas
          document.querySelectorAll('.pregunta').forEach(question => {
            question.classList.remove('active');
            question.style.display = 'none';
          });
          
          if (questionNum > 4) {
            const prevQuestion = document.getElementById(`pregunta-${questionNum-1}-inexperto`);
            prevQuestion.style.display = 'block';
            prevQuestion.classList.add('active');
          } else {
            // Volver a la pregunta 3 (experiencia)
            const prevQuestion = document.getElementById('pregunta-3');
            prevQuestion.style.display = 'block';
            prevQuestion.classList.add('active');
          }
        } 
        else if (currentQuestion.classList.contains('rama-experto')) {
          const questionNum = parseInt(currentQuestion.id.split('-')[1]);
          
          // Ocultar todas las preguntas
          document.querySelectorAll('.pregunta').forEach(question => {
            question.classList.remove('active');
            question.style.display = 'none';
          });
          
          if (questionNum > 4) {
            const prevQuestion = document.getElementById(`pregunta-${questionNum-1}-experto`);
            prevQuestion.style.display = 'block';
            prevQuestion.classList.add('active');
          } else {
            // Volver a la pregunta 3 (experiencia)
            const prevQuestion = document.getElementById('pregunta-3');
            prevQuestion.style.display = 'block';
            prevQuestion.classList.add('active');
          }
        }
        else {
          // Comportamiento normal para preguntas 1-3
          const questionNum = parseInt(currentQuestion.id.split('-')[1]);
          if (questionNum > 1) {
            // Ocultar todas las preguntas
            document.querySelectorAll('.pregunta').forEach(question => {
              question.classList.remove('active');
              question.style.display = 'none';
            });
            
            // Mostrar solo la pregunta anterior
            const prevQuestion = document.getElementById(`pregunta-${questionNum-1}`);
            prevQuestion.style.display = 'block';
            prevQuestion.classList.add('active');
            
            if (questionNum - 1 === 1) {
              this.disabled = true;
            }
            
            // Si estamos volviendo a la pregunta 1 desde la 2, reinicializar los círculos de estilos
            if (questionNum === 2) {
              setTimeout(() => {
                if (typeof crearCirculos === 'function') {
                  crearCirculos('estilos', window.estilos || []);
                  setupMouseInteraction('estilos');
                  updateWorldBoundaries();
                  console.log('Volviendo a la pregunta de estilos, reinicializando círculos');
                } else {
                  console.error('Error: función crearCirculos no disponible');
                }
              }, 200);
            }
          }
        }
        
        updateProgressBar();
      });
      
      // Función para crear efecto de confeti
      function createConfetti() {
        const modal = document.getElementById('completion-modal');
        
        for (let i = 0; i < 100; i++) {
          const confetti = document.createElement('div');
          confetti.classList.add('confetti');
          
          // Colores aleatorios para el confeti
          const colors = ['#f97316', '#fb923c', '#fdba74', '#fed7aa', '#ff4500'];
          confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
          
          // Posición inicial aleatoria
          confetti.style.left = `${Math.random() * 100}%`;
          
          // Tamaño aleatorio
          const size = Math.random() * 8 + 5;
          confetti.style.width = `${size}px`;
          confetti.style.height = `${size}px`;
          
          // Velocidad de caída y rotación aleatoria
          confetti.style.animationDuration = `${Math.random() * 3 + 2}s`;
          confetti.style.animationDelay = `${Math.random() * 3}s`;
          
          modal.appendChild(confetti);
          
          // Eliminar el confeti después de la animación
          setTimeout(() => {
            if (confetti.parentNode === modal) {
              confetti.remove();
            }
          }, 5000);
        }
      }
    });
  </script>
</body>
</html>
